{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract BillionaireDojo",
						"name": "_dojo",
						"type": "address"
					},
					{
						"internalType": "contract IFightLogic",
						"name": "_fightLogic",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReentrancyGuardReentrantCall",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "level",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint8",
						"name": "maxRounds",
						"type": "uint8"
					}
				],
				"name": "EnterOctagon",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "EnterRecoveryZone",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "LeaveOctagon",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "LeaveRecoveryZone",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "player1",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "player2",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "winner",
						"type": "uint256"
					}
				],
				"name": "PickAFight",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "RECOVERY_AMOUNT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "RECOVERY_AMOUNT_ACCRUE_DURATION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "concludeGame",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "enum OctagonLevel",
						"name": "_level",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "_maxRounds",
						"type": "uint8"
					}
				],
				"name": "enterOctagon",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "enterRecoveryZone",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum OctagonLevel",
						"name": "",
						"type": "uint8"
					},
					{
						"internalType": "enum Billionaire",
						"name": "",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "entries",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "entryForToken",
				"outputs": [
					{
						"internalType": "enum OctagonLevel",
						"name": "level",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "rounds",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "arrayIdx",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "fightHistory",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "player1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "player2",
						"type": "uint256"
					},
					{
						"internalType": "enum OctagonLevel",
						"name": "level",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "created",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "winner",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "fightIds",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "gameWinner",
				"outputs": [
					{
						"internalType": "enum Billionaire",
						"name": "winnerTeam",
						"type": "uint8"
					},
					{
						"internalType": "bool",
						"name": "isValid",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_fightId",
						"type": "bytes32"
					}
				],
				"name": "getFight",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "id",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "player1",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "player2",
								"type": "uint256"
							},
							{
								"internalType": "enum OctagonLevel",
								"name": "level",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "created",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "winner",
								"type": "uint256"
							}
						],
						"internalType": "struct Fight",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFightsLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getGameWinner",
				"outputs": [
					{
						"components": [
							{
								"internalType": "enum Billionaire",
								"name": "winnerTeam",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "isValid",
								"type": "bool"
							}
						],
						"internalType": "struct GameWinner",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum OctagonLevel",
						"name": "_level",
						"type": "uint8"
					}
				],
				"name": "getLevelInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "buyIn",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "maxRandomVal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "minRandomVal",
								"type": "uint256"
							}
						],
						"internalType": "struct LevelInfo",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "getOctagonEntryForToken",
				"outputs": [
					{
						"components": [
							{
								"internalType": "enum OctagonLevel",
								"name": "level",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "rounds",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "arrayIdx",
								"type": "uint256"
							}
						],
						"internalType": "struct OctagonEntry",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum OctagonLevel",
						"name": "_level",
						"type": "uint8"
					},
					{
						"internalType": "enum Billionaire",
						"name": "_billionaire",
						"type": "uint8"
					}
				],
				"name": "getOctagonEntryLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "getRecoverInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "recoverStart",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isRecovering",
								"type": "bool"
							}
						],
						"internalType": "struct RecoverInfo",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "getTokenInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isInOctagon",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "balance",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "tokenId",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "recoverStart",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "isRecovering",
										"type": "bool"
									}
								],
								"internalType": "struct RecoverInfo",
								"name": "recoverInfo",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "enum OctagonLevel",
										"name": "level",
										"type": "uint8"
									},
									{
										"internalType": "uint8",
										"name": "rounds",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "tokenId",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "arrayIdx",
										"type": "uint256"
									}
								],
								"internalType": "struct OctagonEntry",
								"name": "octagonEntry",
								"type": "tuple"
							}
						],
						"internalType": "struct TokenInfo",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "inOctagonLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isGameRunning",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "isInOctagon",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "leaveOctagon",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "leaveRecoveryZone",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum OctagonLevel",
						"name": "",
						"type": "uint8"
					}
				],
				"name": "levelInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "buyIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxRandomVal",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minRandomVal",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"internalType": "enum OctagonLevel",
						"name": "_level",
						"type": "uint8"
					},
					{
						"internalType": "enum Billionaire",
						"name": "_opponentTeam",
						"type": "uint8"
					}
				],
				"name": "pickAFight",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "recoverInfos",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "recoverStart",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isRecovering",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"ReentrancyGuardReentrantCall()": [
					{
						"details": "Unauthorized reentrant call."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/Octagon.sol": "Octagon"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [
			":@lukso/=lib/lukso-foundry/src/",
			":@openzeppelin/=lib/openzeppelin-contracts/",
			":ds-test/=lib/forge-std/lib/ds-test/src/",
			":forge-std/=lib/forge-std/src/"
		]
	},
	"sources": {
		"lib/lukso-foundry/src/ERC725/ERC725Y.sol": {
			"keccak256": "0x63bbf70b2518e0d4e4113c5fdb32423f8a5ded05818dcd8407d45f88a29444f5",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://7f02a126d74d6156da32d28e2d1538744491faba82f39f9da70e165494a4c483",
				"dweb:/ipfs/QmNjoxLXFddNWAXHydCJhDKzfdKJHp7jLnKVc6LeDd9h1k"
			]
		},
		"lib/lukso-foundry/src/ERC725/ERC725YCore.sol": {
			"keccak256": "0x05b47d7b46211af80ea52164425e6d31f4cdc869700a2081d875ef3739576f63",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://f55d5ddc7a261f11a4cbe60066be26fad13c9cbab96f1816c57debdd5ceaa35c",
				"dweb:/ipfs/QmYhT9mewkCnv3iNBKVGwVDVqYjnYBfVrDgwSj4v1TJTAn"
			]
		},
		"lib/lukso-foundry/src/ERC725/constants.sol": {
			"keccak256": "0x9afea6f5a327e8ece07613c26757a37443510b01219ed35602abd52b5afb438f",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://894ee0d003e41f244aeb497ff36a7c3b8a9dd9692350e49d5db0f0640da1b997",
				"dweb:/ipfs/QmNhoy4FuiMuCCNmHFWGR33arHY8BQyRkKiM55xiBXjxZb"
			]
		},
		"lib/lukso-foundry/src/ERC725/custom/OwnableUnset.sol": {
			"keccak256": "0xb7cf830b54f8571b3c2d267d64c4bf514f1fc2744a5060528b5ee9184b07306b",
			"license": "MIT",
			"urls": [
				"bzz-raw://ac918a1055a08880eae6e5fe9eeab8c692d58ef72534ba22c308e42a4a00ebcf",
				"dweb:/ipfs/QmcaEPPoxiUXbwymurK6ZJwUPGgEyz7J4HEmVrcGJPvmnQ"
			]
		},
		"lib/lukso-foundry/src/ERC725/errors.sol": {
			"keccak256": "0xbb58894e6843c8fa54e1d2885c4967663360f47107985d83ad502f7dfc63a568",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://d00e92cc91c2fba1b3cd077b556a4171fcc6c77ab2cf15e084d1638afb1ef1b6",
				"dweb:/ipfs/QmUEydU3D2LU5J14QoGGzU6P8n7PwR2s87VEA2qWWnkYLQ"
			]
		},
		"lib/lukso-foundry/src/ERC725/interfaces/IERC725Y.sol": {
			"keccak256": "0xcaceed955485ddb773cf89da15a6af79a9606e20db8a5ad0a9012a61186cc0c3",
			"license": "CC0-1.0",
			"urls": [
				"bzz-raw://f82149c49125ebad21b340229cfb33119369fd8d600f06a3532c0748fe6e85e8",
				"dweb:/ipfs/Qme7y5HbY1mDge1cm2RhRDHb75d2RtCE7TJeJzdaAuiTZ3"
			]
		},
		"lib/lukso-foundry/src/LSP1/ILSP1UniversalReceiver.sol": {
			"keccak256": "0xfb3fcb4f2a7ddab4f29e2163ebf76f526fcee6c9cd8a87092688e3ec234c4af9",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://53309dcb1d8e57183ab444279f43fb60eab49f92cd431412401bfc72200fba0b",
				"dweb:/ipfs/QmfCaV74Nh4S3na1oPtTDuWjcSsJpFoPhvfn1swHhQ3DRr"
			]
		},
		"lib/lukso-foundry/src/LSP1/LSP1Constants.sol": {
			"keccak256": "0xa2924f64e41a515a9fc4245b0af52d693fdc9312d6814288b5b711b55bc6f005",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://0062bdb354e810af172d37fbc7a398f7885788bc91ec1bbd98d52546433fd0d1",
				"dweb:/ipfs/QmYyMDaSjpohGHLV9CxUGc52sAMFkEBmDdXgWr5hnDAA2k"
			]
		},
		"lib/lukso-foundry/src/LSP1/LSP1Utils.sol": {
			"keccak256": "0xd5f12b6d7117bc53d9320f48381c64267d9f7871e186606a9e44c4bd363c3517",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://27dcab2a4345491bd9d50303c37d0b652a252caccc90c145e87390c3fde27caf",
				"dweb:/ipfs/QmQxfvKGFjMUPBYVgqJA1kHjWeJo6kWGtzWzQJNeoaLP2V"
			]
		},
		"lib/lukso-foundry/src/LSP17/LSP17Constants.sol": {
			"keccak256": "0xa34118ff863a8faff830b016329fd80265142f7191530bb21344e50a7846f2c2",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://cd0116f0ffc53d769c51d8581a572ea2ec5dc92f31823b542c6d246e68dbc360",
				"dweb:/ipfs/QmSoAvbh8Vi56giuBjQtaEFTC6c5kjbzmmun3VfoGapKtR"
			]
		},
		"lib/lukso-foundry/src/LSP17/LSP17Errors.sol": {
			"keccak256": "0xbd53b87a3240bea2cca424835a8c4b1a1b1c9eb90caa525bf1cd3748528afca6",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://078ef7696d736e6f6fcaf3901dbbe6449e0512b775725051e89e932a5e486da3",
				"dweb:/ipfs/QmeCx452QirbwnoBnGJERFUuEZiQtZbBW7EGxamiMNEGs8"
			]
		},
		"lib/lukso-foundry/src/LSP17/LSP17Extendable.sol": {
			"keccak256": "0xddeb04c4af76a0e08df92467c4291c0f617545dd00243d7d4e6d647c5024f022",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://cc621d391c1f867f197bcaefd9252a4163547e6e6ab209e17f0f3699cc6a0e3a",
				"dweb:/ipfs/QmbqAondK5AvsxHhNJQ4wyzChmrk6fxbXVnKCApJR4N7tg"
			]
		},
		"lib/lukso-foundry/src/LSP2/LSP2Utils.sol": {
			"keccak256": "0xbcdbdabdd59ff21317cc2c1f9d6291705a6b349f93e48050046336bb0f7b2864",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://534452b881670c8c7cf3677ecd866cc76704585eb49a3f562940f94d889df079",
				"dweb:/ipfs/QmYjmr2hzTC9nLg3sQajYCre3EVqP4qqRg1gbcVFnb3jAH"
			]
		},
		"lib/lukso-foundry/src/LSP4/LSP4Constants.sol": {
			"keccak256": "0xcdd82ff6b9cfcafe9560a367c45dc663ae138b8a5b3475035876d4f736bc98b6",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://c24b89cd9b9056649523966a42f2cd8eac082a0ebd4d982f83aa1a65fef9ebda",
				"dweb:/ipfs/QmUvy4BWkTvLsQsCE6ELxJYgVcEXDkhss5MAmBXLuGZwbS"
			]
		},
		"lib/lukso-foundry/src/LSP4/LSP4DigitalAssetMetadata.sol": {
			"keccak256": "0xe3786d5f18671d0e746299407d18fc1ca5df9a7644df353b5bde7552826b1159",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://8ba293430ac965000cd2627fe9eff45449c091e28f16a7bd77f9659ea426cd73",
				"dweb:/ipfs/QmTDsXr2bNb2B4mPHpCs5Vaw1kchYBjvedNNadGjx7MDLf"
			]
		},
		"lib/lukso-foundry/src/LSP4/LSP4Errors.sol": {
			"keccak256": "0xe1d0efb2c6248b2cf95034f87b80a389eeb05a906cc45d63ede002de48ab12fe",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://6d77a9f00916788ad7883b775cbe8d2094245a4e891b5a958841fe6543c43365",
				"dweb:/ipfs/QmaZLTqEXTuGguDGAUrnhmjTDtHwXTpQXVYQHssmMSLUfa"
			]
		},
		"lib/lukso-foundry/src/LSP8/ILSP8IdentifiableDigitalAsset.sol": {
			"keccak256": "0x9dc4fb50f9e4c84d504e293e3c58d61b2029e837990a658f60c68a54588331db",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://6cbf205399620aa7ea4379f81746f1c62af5b4928374e9de4ed7e59c45a048ba",
				"dweb:/ipfs/QmdDjvAE72zGyMXuseH1Gmyoshi13aM5pd82sT8q5tTrH2"
			]
		},
		"lib/lukso-foundry/src/LSP8/LSP8Constants.sol": {
			"keccak256": "0xa016e5e31ba1b952ada7145ba87810f86700e23552ac40cd0d3e266aa674c1fe",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://d3ceefdf316dec755de3f5155b6c5dfb0f6b89e7d954b754d2ef039e802628ff",
				"dweb:/ipfs/QmShtSbDgXWgz2jih9i5D5gaDMengY7nMv6pea9zvwPUww"
			]
		},
		"lib/lukso-foundry/src/LSP8/LSP8Errors.sol": {
			"keccak256": "0x84f3723b80c2070e48ff7760b607c634ab7184d3ad2b05ec434611f9144a071a",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://784106ece3a669b8fe50e3ff427b0f8a5de64e45b589d4cc74333ae8d2342146",
				"dweb:/ipfs/QmXndwu6E74KaC3zC8stBv14tRhiC1E913vM3kYS46Ajav"
			]
		},
		"lib/lukso-foundry/src/LSP8/LSP8IdentifiableDigitalAsset.sol": {
			"keccak256": "0x117538f48feddfb318cdcf52448105b3348ee67120c8a91c9021dde78e846dab",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://e965af381c4f08b7520ba1ba568452c44470108dfddf9030890713bf8c71226d",
				"dweb:/ipfs/QmctCpt2abnTqstneD8bfv35yWdsj1xSGuuRwT9U9TKchk"
			]
		},
		"lib/lukso-foundry/src/LSP8/LSP8IdentifiableDigitalAssetCore.sol": {
			"keccak256": "0x87bead70a9229571ee83c770c4339f5942d474d9aa960501147cb335075fd518",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://2753139e306821df78e06925f6451bf14a4a36ca0a2eae92baff35baef82d21c",
				"dweb:/ipfs/QmVRJ9ioQsSn43u3yu2G8U9nm6nbMB9ojCve6ff3JGuLa6"
			]
		},
		"lib/lukso-foundry/src/LSP8/extensions/LSP8CompatibleERC721.sol": {
			"keccak256": "0x1c33f58c920fe917c65ec6f2ba5c9a1d7ddcef33bdfddddabebd610798630b00",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://8d44b9394cd25b6a8a5169fb80218483b7fa50093188cecaf72a32fbf771a7db",
				"dweb:/ipfs/QmWkkPjcMUThMXErA8NPyzD3BX5bRPKTATK8uQJi1M5jFM"
			]
		},
		"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"lib/openzeppelin-contracts/contracts/interfaces/IERC721Receiver.sol": {
			"keccak256": "0x12808acc0c2cbc0b9068755711fd79483b4f002e850d25e0e72e735765b6cd99",
			"license": "MIT",
			"urls": [
				"bzz-raw://8fd1ab9e3091d4c4fc4b34c25b54df5c092c849c8c09d722a34186bd051b0890",
				"dweb:/ipfs/QmUqykAZfKRHEkYVRmXKsFqvLwyUFPrukdWdAmXDkixJAL"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
			"license": "MIT",
			"urls": [
				"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
				"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
			"license": "MIT",
			"urls": [
				"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
				"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
			"keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
			"license": "MIT",
			"urls": [
				"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
				"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
			"keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
			"license": "MIT",
			"urls": [
				"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
				"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236",
			"license": "MIT",
			"urls": [
				"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02",
				"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
			"keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
				"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
			"license": "MIT",
			"urls": [
				"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
				"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
			"keccak256": "0xac3d50e321a48a40b4496970ce725900f13aeb2255b7c1203f5adbe98c4a911a",
			"license": "MIT",
			"urls": [
				"bzz-raw://1d7b235b578347dce2d831a76f122e820a7db7e73fd2e47f13bafdcd61c5b066",
				"dweb:/ipfs/QmVAELwambfJa55HfiCoz1kFFh7iYwRYeW5x8si6AFM4iX"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
			"license": "MIT",
			"urls": [
				"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
				"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
			"keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
				"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
			"keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
			"license": "MIT",
			"urls": [
				"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
				"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
			"keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
			"license": "MIT",
			"urls": [
				"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
				"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
			]
		},
		"solidity-bytes-utils/contracts/BytesLib.sol": {
			"keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
			"license": "Unlicense",
			"urls": [
				"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
				"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
			]
		},
		"src/Base64.sol": {
			"keccak256": "0xf115cfe7dcbbdff35f5018e70575be21c452b6b457673cf32c2f7050d32d30c4",
			"license": "MIT",
			"urls": [
				"bzz-raw://362b874195cfb86225123188bc5ed1fbe85308ca41882edd95c0d81500290a83",
				"dweb:/ipfs/QmVzQu2GsQdm4LiAUfk4wskNSXdy28WxP2ytGbeqyYMTFi"
			]
		},
		"src/BillionaireDojo.sol": {
			"keccak256": "0xaf5c3bd8bbb5144ce9c551b1a0d61549cf3331ea0be2be04817ee2c825e343bd",
			"license": "MIT",
			"urls": [
				"bzz-raw://1d319f8f2ea50736fae8cead749b0025e0efcf7391c56deaa097772254da1a31",
				"dweb:/ipfs/QmdUihNQgMDnC44ZuHauyQccxMMMRka5P7EpDRUSbY9Cx2"
			]
		},
		"src/Constants.sol": {
			"keccak256": "0x51581d422bf5cf899250cf5251f480b48414f65185bf1685a3560d5cc8cb70cd",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a837e63e4b62a5f3071f10fd55632bb3532b017c85a02b8492185408796633e",
				"dweb:/ipfs/QmU71CqBg62KjpQzdYDUdQTFpjcRiZXCP4dQukkKUHjAvG"
			]
		},
		"src/Octagon.sol": {
			"keccak256": "0x8b69f5019f1422774fa4dc35fe1afdf698a0546c274e7b0e281407d732ce96b7",
			"license": "MIT",
			"urls": [
				"bzz-raw://f2852fe9463d4be60dcea3dba28ccdbe22ede48adc53ef3447ed71729d82172d",
				"dweb:/ipfs/QmebHTBLiU6epvJBkB4SRS66ouW8LzL8S9tJt6mgiNmCCx"
			]
		},
		"src/SafeMath.sol": {
			"keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
			"license": "MIT",
			"urls": [
				"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
				"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
			]
		},
		"src/Structs.sol": {
			"keccak256": "0xafba7088ea0922f64cd0f9f095d349db6534343bd07f3f5c0c1b71df1b7b69c9",
			"license": "MIT",
			"urls": [
				"bzz-raw://d5591fe50a7c9b14b9f6fb1b143a391a101c2f667a2dba78187549db5e4f4b2c",
				"dweb:/ipfs/QmXyCRjmkkwuVBDqEi5QLvikEPHyKmwkYJG156oEg4EKPW"
			]
		},
		"src/interfaces/IBillionaireDojo.sol": {
			"keccak256": "0x64824f04b2e446c75f48201d4bcd75af711be77a53d7e9690c2311242beaba97",
			"license": "MIT",
			"urls": [
				"bzz-raw://5bf2a45add5beebd25de8c50a765ca114c06f36cb659647b494b8158ac37157a",
				"dweb:/ipfs/QmP3SYYMfdfsCd2T1t6YjzQvQ4mxrSkxssaDfFNyTgrq9g"
			]
		},
		"src/interfaces/IFightLogic.sol": {
			"keccak256": "0x7cd9b86a8310b0fc7e31d55c708edf68a8b2b6be1cddcc8585fa0de4068aa435",
			"license": "MIT",
			"urls": [
				"bzz-raw://3ae3b471e0900a8e50a209da35994ae1e1b000afcfd0a06ba079058f059f561d",
				"dweb:/ipfs/QmULTpjpDm5XHamp9hy9CoaMX6EsgdoVKaSseWT8F3kQsH"
			]
		},
		"src/interfaces/IOctagon.sol": {
			"keccak256": "0x5848349b8a07a70e82605b112172c07e5c71713b5e670bbf9bf7225177be99c5",
			"license": "MIT",
			"urls": [
				"bzz-raw://9ab5f6d66ea4b37f574bc46f1ec622e6be4a58f9caa22b01c7c82ed44c3dbd58",
				"dweb:/ipfs/QmPBA8LkyYU3Jg3mEDxhQsS7B2DKs85uYkhHUkLuAkWcDW"
			]
		}
	},
	"version": 1
}